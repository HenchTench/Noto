private void btnGenerate_Click(object sender, EventArgs e)
        {
            string buttonName = txtName.Text;
            rtbButtons.AppendText(buttonName + Environment.NewLine);
            RefreshButtons();
        }
        private void RefreshButtons()
        {
            foreach (Control control in Controls)
            {
                if (control is Button && control.Name != "btnCore") ///This is deleting btnGenerate, try && control.Name != "btnGenerate" later
                {
                    Controls.Remove(control);
                    control.Dispose();
                }
            }

            string[] buttonNames = rtbButtons.Text.Split(new[] { "</n>" }, StringSplitOptions.RemoveEmptyEntries); ///This is now working correctly

            int radius = 100;
            int centerX = btnCore.Location.X + btnCore.Width / 2;
            int centerY = btnCore.Location.Y + btnCore.Height / 2;
            double angleIncrement = 360.0 / buttonNames.Length;
            double angle = 0;

            foreach (string buttonName in buttonNames)
            {
                Button newButton = new Button();
                newButton.Text = buttonName;
                newButton.Size = new Size(75, 23);
                newButton.Location = GetButtonLocation(centerX, centerY, radius, angle);
                Controls.Add(newButton);

                DrawLine(centerX, centerY, newButton.Location.X + newButton.Width / 2, newButton.Location.Y + newButton.Height / 2);

                angle += angleIncrement;
            }
        }
        private Point GetButtonLocation(int centerX, int centerY, int radius, double angleDegrees)
        {
            double angleRadians = angleDegrees * Math.PI / 180;
            int x = (int)(centerX + radius * Math.Cos(angleRadians)) - 37;
            int y = (int)(centerY + radius * Math.Sin(angleRadians)) - 12;
            return new Point(x, y);
        }

        private void DrawLine(int x1, int y1, int x2, int y2)
        {
            Graphics g = CreateGraphics();
            Pen pen = new Pen(Color.Black);
            g.DrawLine(pen, x1, y1, x2, y2);
            g.Dispose();
        }
